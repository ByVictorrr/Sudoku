
#include <iostream>
#include <iomanip>
#include <fstream>
#include "Instructions.hpp"
#include <cstdlib>
#include "Suduko.hpp"


#pragma once
using namespace std;

        
    
    //setting the grid when declaring a object
    
Sudoku::Sudoku(){
        
       
        
        
        //setting board
        LeftNumber[0][0] = 1;
        LeftNumber[1][0] = 2;
        LeftNumber[2][0] = 3;
        LeftNumber[3][0] = 4;
        LeftNumber[4][0] = 5;
        LeftNumber[5][0] = 6;
        LeftNumber[6][0] = 7;
        LeftNumber[7][0] = 8;
        LeftNumber[8][0] = 9;
        
    

        Ended = "           Congrats Y0U Have Won !!!!!!\n\n";
        
    errors = 0;
    
        
       Comments[0]  = "\n\n       Keep it up almost there";
         Comments[1]  = "\n\n       Good One !";
         Comments[2]  = "\n\n Woah do you need to Cool off???";
        
        
         Comments[3]  = " \n               Dam ";
         Comments[4]  = "   \n   You must of played Sudoku before";
        
        quit = 10;
        
    Score = 100;
         randomGame = arc4random() % 10 +1;
        
        
        random = arc4random() % 5 +1;
        for(int x=0; x< 9; x++){
            
       
            
            
            for(int y=0; y< 9; y++){
               
                
                //grid[x-3][y]=0;
                
                
                
                box[x][0] = " [ ";
                column[0][x] = " ] ";
                
                lines[0][x] = "|";
                
                //grid[x][y] = 0;
                
                knowngrid[x][y] = 0;
                
                
                name = "None";
                
            }
            
            
            
            
            
        }
        
        
    }
    
    

  //print default grid
    
void Sudoku::printDefaultGrid(){
    cout <<  "Score: " << Score;
   
    cout << "                                              Number of Errors: " << errors;
    
        {//start of the board
            
            
            cout << "\n\n                        ☟ Ĉ Ỏ Ł Ǚ Ɱ Ɲ ☟\n\n";
            
            cout << "☟Ɽ☟ +-------------------------------------------------------------+\n";
            cout << "☟Ộ☟ |  ①     ②     ③      ④     ⑤     ⑥     ⑦      ⑧     ⑨  |\n";
            cout << "☟W☟ |_____||_____||_____||_____||_____||_____||_____||_____||_____|\n";
            
            
           
            
            for(int x=0; x< 9; x++){
                //cout << LeftNumber[x][0] << "->\n";
                
                cout << setw(2);
                cout <<"    |_____||_____||_____||_____||_____||_____||_____||_____||_____|\n";
               
                
                cout << LeftNumber[x][0] << " ☞ ";
                
                for(int y=0; y< 9; y++){
                    
                    
                    cout  << lines[0][x] << "  " << grid[x][y]<< "  " << lines[0][x];
                    
                    
                    
                    
                    
                    
                }
                //cout << lines[x][0];
                
                
                cout << "\n";
                
            }
            cout <<"    |_____||_____||_____||_____||_____||_____||_____||_____||_____|\n\n";
            
            
        
            
            cout << name <<" Enter in the Row number, Column Number then the number \n\n";
            
            
            cout << "Row # (①-> ⑨) ShortCut: Type(10 - Exit||11 - Very easy||12 - Easy||13 - Medium||14 - Hard): \n";
            
            
            cin >> row;
            if (row == quit) {
                exit( EXIT_FAILURE);
            }
            if (row == 11) {
                veryEasyGame();
            }
            if (row == 12) {
                EasyGame();
            }
            if (row == 13) {
                MediumGame();
            }
            if (row == 14) {
                HardGame();
            }
          
           
            cout << "Column # (①-> ⑨) ShortCuts: Type(10 - Exit||11 - Very easy||12 - Easy||13 - Medium||14 - Hard): \n";
            

            cin >> col;
            if (col == quit) {
                exit( EXIT_FAILURE);
            }
            if (col== 11) {
                veryEasyGame();
            }
            if (col == 12) {
                EasyGame();
            }
            if (col == 13) {
                MediumGame();
            }
            if (col == 14) {
                HardGame();
            }

          
            cout << "The number you would like to Place in row: " << row << " and column: " << col << " is: \n";
            
            cin >> num;
            
            cout << "\n\n";
            
        }
        }
        
    
        

    
    
    
void Sudoku::getName(){
    cout << "\n\nPlease enter your First name: ";
    cin >> name;
    cout << "\n\n";
}
    
        

        //loop for the platform
    
void Sudoku::printGrid(){
        

        if(Score > 0) {
        
       printDefaultGrid();
        
        
                  while (Over10() && checkEmptry() && checkRightNum() && FinishGame()) {
                      
        
                  
    if(grid[row-1][col-1] ==  knowngrid[row-1][col-1]){
        
        
                //randomly generate comments strings
        
        if (random == 1) {
            cout << Comments[0] << "\n\n";
            
        }
        
        if (random == 2) {
            
            cout << Comments[1] << name<< "\n\n";
        }
        if (random == 3) {
            cout << Comments[2]<< "\n\n";
        }
        
        if (random == 4) {
            
            cout << Comments[3] << name<< "\n\n";
            
        }
        if (random == 5) {
            cout << Comments[4]<< "\n\n";
            
        }


    
        
        
       
        
        printGrid();
            
             grid[row-1][col-1]=num;
             
        
    
    }
    
   
            
            
                  }
            
            
                  
        }
        
        
        else{
            
            cout << "\n\n Your Score = " << Score << ", Which means you cant play this level any more\n\n\n";
           
            
        }

              }
    
    
    
//setingg very easy game :D
    
void Sudoku::veryEasyGame(){
    
        
        int veryEasy1Unknown[9][9] =
        //first game
       {{9,2,7,0,5,6,1,3,8},
        {0,5,8,1,7,2,0,9,4},
        {1,0,4,3,9,8,7,2,5},
        {4,0,3,5,2,7,0,6,9},
        {8,7,2,9,6,1,0,5,3},
        {5,9,0,8,4,3,2,7,1},
        {2,3,5,7,8,4,9,1,6},
        {6,4,1,2,3,9,5,8,7},
        {7,0,9,6,1,5,0,4,2}};
    
    
        int veryEasy1Known[9][9] =
           {{9,2,7,4,5,6,1,3,8},
            {3,5,8,1,7,2,6,9,4},
            {1,6,4,3,9,8,7,2,5},
            {4,1,3,5,2,7,8,6,9},
            {8,7,2,9,6,1,4,5,3},
            {5,9,6,8,4,3,2,7,1},
            {2,3,5,7,8,4,9,1,6},
            {6,4,1,2,3,9,5,8,7},
            {7,8,9,6,1,5,3,4,2}};

        
        //second game
        int veryEasy2Unknown[9][9] =
       {{9,0,7,5,4,8,1,0,3},
        {1,0,2,7,6,0,4,5,0},
        {5,8,4,2,3,1,7,9,6},
        {6,9,3,4,7,2,0,1,5},
        {7,5,1,0,8,6,9,4,2},
        {4,0,8,1,9,5,3,6,7},
        {3,0,6,0,5,4,2,7,0},
        {2,7,9,6,1,3,0,8,4},
        {8,0,5,9,2,7,0,3,1}};

    
    
        int veryEasy2Known[9][9] =
    
           {{9,6,7,5,4,8,1,2,3},
            {1,3,2,7,6,9,4,5,8},
            {5,8,4,2,3,1,7,9,6},
            {6,9,3,4,7,2,8,1,5},
            {7,5,1,3,8,6,9,4,2},
            {4,2,8,1,9,5,3,6,7},
            {3,1,6,8,5,4,2,7,9},
            {2,7,9,6,1,3,5,8,4},
            {8,4,5,9,2,7,6,3,1}};
        
        //3rd game
        int veryEasy3Unknown[9][9] =
       {{3,0,9,1,4,6,7,8,2},
        {8,7,2,9,3,0,0,1,4},
        {1,6,0,2,8,7,5,9,3},
        {2,8,6,0,5,3,1,7,9},
        {9,4,0,8,7,2,3,5,6},
        {7,3,5,0,1,9,2,4,0},
        {0,1,3,7,6,8,0,2,5},
        {5,2,7,3,0,4,8,6,1},
        {6,0,8,5,2,1,4,3,0}};

    
    
    
        int veryEasy3Known[9][9] =
        
           {{3,5,9,1,4,6,7,8,2},
            {8,7,2,9,3,5,6,1,4},
            {1,6,4,2,8,7,5,9,3},
            {2,8,6,4,5,3,1,7,9},
            {9,4,1,8,7,2,3,5,6},
            {7,3,5,6,1,9,2,4,8},
            {4,1,3,7,6,8,9,2,5},
            {5,2,7,3,9,4,8,6,1},
            {6,9,8,5,2,1,4,3,7}};
        
        
        
        
        //4th game
        
        int veryEasy4Unknown[9][9] =
    {{3,0,9,1,4,6,7,8,2},
        {8,7,0,9,3,5,0,1,4},
        {1,6,4,2,8,0,5,9,3},
        {2,8,0,4,5,3,1,0,9},
        {9,4,1,8,7,2,0,5,6},
        {7,3,0,6,1,0,2,4,8},
        {4,1,3,7,6,0,9,2,0},
        {5,2,7,3,0,4,8,6,1},
        {0,9,8,5,2,1,4,3,7}};

    
    
    
        int veryEasy4Known[9][9] =
        
           {{3,5,9,1,4,6,7,8,2},
            {8,7,2,9,3,5,6,1,4},
            {1,6,4,2,8,7,5,9,3},
            {2,8,6,4,5,3,1,7,9},
            {9,4,1,8,7,2,3,5,6},
            {7,3,5,6,1,9,2,4,8},
            {4,1,3,7,6,8,9,2,5},
            {5,2,7,3,9,4,8,6,1},
            {6,9,8,5,2,1,4,3,7}};
        
        
        
     //5th game
        
        
        int veryEasy5Unknown[9][9] =
    {{0,3,1,4,0,5,2,6,7},
        {2,5,0,1,7,9,3,0,8},
        {7,8,4,3,2,0,5,1,9},
        {4,0,3,5,0,8,7,2,0},
        {5,7,0,2,6,0,8,3,1},
        {6,2,8,7,1,3,4,9,5},
        {1,6,7,8,0,2,9,5,3},
        {3,0,2,6,5,7,0,8,4},
        {8,4,5,0,3,1,6,7,2}};

    
    
    
        int veryEasy5Known[9][9] =
           {{9,3,1,4,8,5,2,6,7},
            {2,5,6,1,7,9,3,4,8},
            {7,8,4,3,2,6,5,1,9},
            {4,1,3,5,9,8,7,2,6},
            {5,7,9,2,6,4,8,3,1},
            {6,2,8,7,1,3,4,9,5},
            {1,6,7,8,4,2,9,5,3},
            {3,9,2,6,5,7,1,8,4},
            {8,4,5,9,3,1,6,7,2}};
        



//6th game
        
        
        
        
        int veryEasy6Unknown[9][9] =
    {{2,6,0,0,5,4,1,3,8},
        {7,4,8,0,1,3,2,6,5},
        {5,3,0,2,6,0,4,9,7},
        {4,8,7,6,9,2,5,1,3},
        {6,1,0,4,7,5,9,0,0},
        {9,0,5,8,3,0,7,4,6},
        {8,7,0,3,4,9,6,5,1},
        {1,9,6,0,8,0,3,2,4},
        {3,0,4,1,2,6,8,7,9}};

    
    
    
        int veryEasy6Known[9][9] =
           {{2,6,9,7,5,4,1,3,8},
            {7,4,8,9,1,3,2,6,5},
            {5,3,1,2,6,8,4,9,7},
            {4,8,7,6,9,2,5,1,3},
            {6,1,3,4,7,5,9,8,2},
            {9,2,5,8,3,1,7,4,6},
            {8,7,2,3,4,9,6,5,1},
            {1,9,6,5,8,7,3,2,4},
            {3,5,4,1,2,6,8,7,9}};

        
       //7th game
        
        
        
        int veryEasy7Unknown[9][9] =
       {{5,6,0,2,0,8,7,9,1},
        {1,7,8,9,5,0,4,2,0},
        {2,4,9,6,0,7,8,5,3},
        {4,8,0,7,2,1,9,3,5},
        {9,3,2,5,6,4,1,7,8},
        {7,0,1,8,3,9,6,4,2},
        {6,9,7,3,8,2,5,1,4},
        {3,1,5,0,9,0,2,0,7},
        {8,2,4,1,7,5,0,0,9}};
    
    
    
    
        int veryEasy7Known[9][9] =
           {{5,6,3,2,4,8,7,9,1},
            {1,7,8,9,5,3,4,2,6},
            {2,4,9,6,1,7,8,5,3},
            {4,8,6,7,2,1,9,3,5},
            {9,3,2,5,6,4,1,7,8},
            {7,5,1,8,3,9,6,4,2},
            {6,9,7,3,8,2,5,1,4},
            {3,1,5,4,9,6,2,8,7},
            {8,2,4,1,7,5,3,6,9}};
        
        
        //set 8th very easy
        
        
        int veryEasy8Unknown[9][9] =
           {{6,0,0,0,0,8,9,0,0},
            {4,0,8,0,0,2,0,0,5},
            {9,0,0,0,0,4,8,3,0},
            {0,7,0,0,0,5,0,0,1},
            {0,0,4,0,3,0,5,0,0},
            {5,0,0,2,0,0,0,8,0},
            {0,4,6,9,0,0,0,0,8},
            {2,0,0,4,0,0,1,0,9},
            {0,0,3,8,0,0,0,0,2}};
        
        
        
        
        int veryEasy8Known[9][9] =
           {{6,5,7,3,1,8,9,2,4},
            {4,3,8,7,9,2,6,1,5},
            {9,1,2,5,6,4,8,3,7},
            {3,7,9,6,8,5,2,4,1},
            {8,2,4,1,3,7,5,9,6},
            {5,6,1,2,4,9,7,8,3},
            {7,4,6,9,2,1,3,5,8},
            {2,8,5,4,7,3,1,6,9},
            {1,9,3,8,5,6,4,7,2}};
        

        
        //setting 9th game
        
        
        
        int veryEasy9Unknown[9][9] =
           {{0,0,2,0,3,0,5,9,0},
            {0,3,4,1,5,0,2,7,0},
            {6,0,1,0,0,0,0,0,0},
            {0,6,3,5,7,0,0,0,0},
            {0,0,0,0,0,0,0,0,0},
            {0,0,0,0,2,1,3,6,0},
            {0,0,0,0,0,0,4,0,2},
            {0,4,5,0,8,2,6,3,0},
            {0,2,8,0,4,0,7,0,0}};
        
        
        
        
        int veryEasy9Known[9][9] =
           {{8,7,2,6,3,4,5,9,1},
            {9,3,4,1,5,8,2,7,6},
            {6,5,1,2,9,7,8,4,3},
            {4,6,3,5,7,9,1,2,8},
            {2,1,7,8,6,3,9,5,4},
            {5,8,9,4,2,1,3,6,7},
            {7,9,6,3,1,5,4,8,2},
            {1,4,5,7,8,2,6,3,9},
            {3,2,8,9,4,6,7,1,5}};
        
        //set 10th game
        
        
        
        int veryEasy10Unknown[9][9] =
           {{9,8,0,0,0,0,0,1,4},
            {0,0,4,0,8,9,0,6,5},
            {5,0,0,0,0,3,0,0,0},
            {0,0,0,0,0,2,0,0,3},
            {4,0,0,6,0,8,0,0,1},
            {2,0,0,3,0,0,0,0,0},
            {0,0,0,2,0,0,0,0,8},
            {8,5,0,4,9,0,1,0,0},
            {1,2,0,0,0,0,0,7,9}};
        
        
        
        
        int veryEasy10Known[9][9] =
           {{9,8,7,5,2,6,3,1,4},
            {3,1,4,7,8,9,2,6,5},
            {5,6,2,1,4,3,8,9,7},
            {6,7,8,0,1,2,5,4,3},
            {4,3,5,6,7,8,9,2,1},
            {2,9,1,3,5,4,7,8,6},
            {7,4,9,2,3,1,6,5,8},
            {8,5,6,4,9,7,1,3,2},
            {1,2,3,8,6,5,4,7,9}};
        
        
        
        
        for(int x=0; x< 9; x++){
            
            for(int y=0; y< 9; y++){
                

        
        
        
                if(randomGame ==1){
                
                grid[x][y] = veryEasy2Unknown[x][y];
                knowngrid[x][y] = veryEasy2Known[x][y];
                
                
                }
                
                
                
                if (randomGame == 2) {
                    grid[x][y] = veryEasy1Unknown[x][y];
                    knowngrid[x][y] = veryEasy1Known[x][y];
                }
                
                
                
                if(randomGame  ==3 ){
                    
                    
                    grid[x][y] = veryEasy3Unknown[x][y];
                    knowngrid[x][y] = veryEasy3Known[x][y];

                    
                }
                
                if(randomGame ==4){
                    
                    grid[x][y] = veryEasy4Unknown[x][y];
                    knowngrid[x][y] = veryEasy4Known[x][y];
                 
                    
                }
                
                
                if(randomGame ==5){
                    
                    grid[x][y] = veryEasy5Unknown[x][y];
                    knowngrid[x][y] = veryEasy5Known[x][y];
                    
                
                    
                }
                
                
                if(randomGame ==6){
                    
                    grid[x][y] = veryEasy6Unknown[x][y];
                    knowngrid[x][y] = veryEasy6Known[x][y];
                    
                    
                    
                }
                
                
                if(randomGame==7){
                    
                    grid[x][y] = veryEasy7Unknown[x][y];
                    knowngrid[x][y] = veryEasy7Known[x][y];
                    
                    
                }
                
                
                if(randomGame==8){
                    
                    grid[x][y] = veryEasy8Unknown[x][y];
                    knowngrid[x][y] = veryEasy8Known[x][y];
                    
                    
                }

                if(randomGame==9){
                    
                    grid[x][y] = veryEasy9Unknown[x][y];
                    knowngrid[x][y] = veryEasy9Known[x][y];
                    
                    
                }
                
                
                
                if(randomGame==10){
                    grid[x][y] = veryEasy10Unknown[x][y];
                    knowngrid[x][y] = veryEasy10Known[x][y];
                    
                                  
            
            
        }
        
            }
        }
    Score = 100;
    errors = 0;
        cout <<"You have chosen:                     𝒱 Ė Ȓ Ÿ   Ḙ Ǟ Ṧ Ÿ\n\n";
    
        
    
         cout << "Check SudukoGameResults.txt on your Computer for results and score at the end!\n\n";
        
        printSudokuOnFile();
        
              printGrid();
        
        if (Score > 0) {
             cout << Ended;
        }
        
        
        printSudokuOnFile();
        
        ScoreSelection();
     errors = 0;
    
    Score = 100;
    
    

    }
    
    
    
    
    
    
    
    
    //seting easy game
    
    void Sudoku::EasyGame(){
        
        
        int Easy1Unknown[9][9] =
        //first game
        
           {{7,0,0,6,0,8,0,0,0},
            {0,0,0,0,0,0,1,3,0},
            {0,0,3,0,9,0,0,0,2},
            {0,5,0,3,6,0,0,0,1},
            {0,2,0,0,4,0,0,9,0},
            {6,0,0,0,8,9,0,4,0},
            {2,0,0,0,1,0,7,0,0},
            {0,3,7,0,0,0,0,0,0},
            {0,0,0,9,0,3,0,0,4}};
        
        
        int Easy1Known[9][9] =
        
        {{7,1,2,6,3,8,4,5,9},
            {8,4,9,7,5,2,1,3,6},
            {5,6,3,4,9,1,8,7,2},
            {9,5,4,3,6,7,2,8,1},
            {3,2,8,1,4,5,6,9,7},
            {6,7,1,2,8,9,3,4,5},
            {2,9,5,8,1,4,7,6,3},
            {4,3,7,5,2,6,9,1,8},
            {1,8,6,9,7,3,5,2,4}};
        
        //second game
        
        
        
        int Easy2Unknown[9][9] =
        //first game
        
           {{0,0,0,0,8,0,0,1,4},
            {0,0,0,0,0,0,7,0,0},
            {0,8,4,0,1,0,2,9,0},
            {0,2,6,0,0,8,3,0,0},
            {0,3,0,2,0,9,0,8,0},
            {0,0,7,5,0,0,9,2,0},
            {0,5,3,0,2,0,6,4,0},
            {0,0,2,0,0,0,0,0,0},
            {4,9,0,0,3,0,0,0,0}};
        
        
        int Easy2Known[9][9] =
        
        {{2,7,9,3,8,6,5,1,4},
            {3,1,5,4,9,2,7,6,8},
            {6,8,4,7,1,5,2,9,3},
            {9,2,6,1,4,8,3,7,5},
            {5,3,1,2,7,9,4,8,6},
            {8,4,7,5,6,3,9,2,1},
            {7,5,3,8,2,1,6,4,9},
            {1,6,2,9,5,4,8,3,7},
            {4,9,8,6,3,7,1,5,2}};

        
        //third game
        
        
        
        int Easy3Unknown[9][9] =
        
           {{0,0,9,7,0,0,0,0,0},
            {7,0,0,0,2,0,0,8,0},
            {0,0,0,1,6,0,0,0,2},
            {0,8,4,0,0,0,1,5,7},
            {0,0,0,0,0,0,0,0,0},
            {6,3,5,0,0,0,8,9,0},
            {3,0,0,0,8,6,0,0,0},
            {0,5,0,0,3,0,0,0,8},
            {0,0,0,0,0,1,9,0,0}};
        
        
        int Easy3Known[9][9] =
            {{5,2,9,7,4,8,3,6,1},
            {7,1,6,3,2,5,4,8,9},
            {8,4,3,1,6,9,5,7,2},
            {2,8,4,6,9,3,1,5,7},
            {9,7,1,8,5,4,2,3,6},
            {6,3,5,2,1,7,8,9,4},
            {3,9,2,4,8,6,7,1,5},
            {1,5,7,9,3,2,6,4,8},
            {4,6,8,5,7,1,9,2,3}};
        
        
        //4th game
        
        
        
        
        int Easy4Unknown[9][9] =
        
           {{0,5,0,0,0,0,7,0,0},
            {0,0,0,0,1,3,0,0,0},
            {6,0,3,0,0,0,0,4,1},
            {2,0,0,8,4,0,0,0,0},
            {4,8,0,0,0,0,0,9,5},
            {0,0,0,0,6,9,0,0,2},
            {1,9,0,0,0,0,3,0,7},
            {0,0,0,6,8,0,0,0,0},
            {0,0,6,0,0,0,0,1,0}};
        
        
        int Easy4Known[9][9] =
        
           {{8,5,1,4,2,6,7,3,9},
            {9,7,4,5,1,3,8,2,6},
            {6,2,3,9,7,8,5,4,1},
            {2,6,9,8,4,5,1,7,3},
            {4,8,7,1,3,2,6,9,5},
            {3,1,5,7,6,9,4,8,2},
            {1,9,0,0,0,0,3,0,7},
            {7,3,2,6,8,1,9,5,4},
            {5,4,6,3,9,7,2,1,8}};
        
        
        
        //5th game
        
        
        
        
        int Easy5Unknown[9][9] =
        
           {{0,0,0,9,0,0,0,7,4},
            {0,3,6,0,5,0,0,0,9},
            {0,7,9,0,0,1,0,0,0},
            {0,2,0,0,9,7,4,0,0},
            {1,0,0,0,0,0,0,0,7},
            {0,0,7,1,8,0,0,2,0},
            {0,0,0,8,0,0,3,5,0},
            {3,0,0,0,1,0,7,4,0},
            {8,6,0,0,0,3,0,0,0}};
        
        
        int Easy5Known[9][9] =
        
        {{5,1,8,9,3,2,6,7,4},
            {4,3,6,7,5,8,2,1,9},
            {2,7,9,4,6,1,8,3,5},
            {6,2,5,3,9,7,4,8,1},
            {1,8,3,2,4,5,9,6,7},
            {9,4,7,1,8,6,5,2,3},
            {7,9,1,8,2,4,3,5,6},
            {3,5,2,6,1,9,7,4,8},
            {8,6,4,5,7,3,1,9,2}};
        
        
        
        
        //6th easy game
        
        
        int Easy6Unknown[9][9] =
        
        {{0,0,2,8,9,0,0,0,7},
            {0,0,0,0,3,0,0,0,1},
            {0,0,0,7,0,0,3,8,2},
            {0,0,5,0,0,0,7,0,0},
            {0,9,0,0,5,0,0,3,0},
            {0,0,3,0,0,0,1,0,0},
            {5,6,7,0,0,8,0,0,0},
            {9,0,0,0,6,0,0,0,0},
            {8,0,0,0,4,3,5,0,0}};
        
        
        int Easy6Known[9][9] =
        
        {{3,1,2,8,9,5,6,4,7},
            {4,7,8,6,3,2,9,5,1},
            {6,5,9,7,1,4,3,8,2},
            {1,4,5,3,8,6,7,2,9},
            {7,9,6,2,5,1,8,3,4},
            {2,8,3,4,7,9,1,6,5},
            {5,6,7,1,2,8,4,9,3},
            {9,3,4,5,6,7,2,1,8},
            {8,2,1,9,4,3,5,7,6}};

        
        
        //7th game
        
        
        
        
        
        
        int Easy7Unknown[9][9] =
        
           {{7,3,4,0,9,0,1,0,0},
            {0,0,5,7,0,0,0,0,0},
            {0,8,0,3,0,6,0,0,0},
            {0,2,0,0,0,5,0,0,4},
            {0,0,8,0,0,0,3,0,0},
            {4,0,0,8,0,0,0,2,0},
            {0,0,0,8,0,0,0,2,0},
            {0,0,0,0,0,4,6,0,0},
            {0,0,7,0,6,0,5,4,8}};
        
        
        int Easy7Known[9][9] =
        
        {{7,3,4,2,9,8,1,5,6},
            {9,6,5,7,4,1,2,8,3},
            {1,8,2,3,5,6,4,9,7},
            {3,2,9,6,1,5,8,7,4},
            {5,7,8,4,2,9,3,6,1},
            {4,1,6,8,3,7,9,2,5},
            {6,4,1,5,8,2,7,3,9},
            {8,5,3,9,7,4,6,1,2},
            {2,9,7,1,6,3,5,4,8}};
        

        //8th game
        
        
        
        
        
        int Easy8Unknown[9][9] =
        
           {{0,0,7,4,0,0,0,9,0},
            {5,2,4,0,0,0,0,0,0},
            {0,6,0,0,8,5,7,0,0},
            {0,0,0,0,2,0,0,0,4},
            {6,4,0,0,7,0,0,2,1},
            {3,0,0,0,6,0,0,0,0},
            {0,0,8,6,9,0,0,7,0},
            {0,0,0,0,0,0,2,6,9},
            {0,9,0,0,0,2,1,0,0}};
        
        
        int Easy8Known[9][9] =
        
           {{8,3,7,4,1,6,5,9,2},
            {5,2,4,9,3,7,8,1,6},
            {9,6,1,2,8,5,7,4,3},
            {1,7,5,3,2,9,6,8,4},
            {6,4,9,5,7,8,3,2,1},
            {3,8,2,1,6,4,9,5,7},
            {2,1,8,6,9,3,4,7,5},
            {7,5,3,8,4,1,2,6,9},
            {4,9,6,7,5,2,1,3,8}};

        
        
      //9th game
        
        
        int Easy9Unknown[9][9] =
        
        {{2,0,9,0,0,0,0,8,0},
            {4,8,0,0,0,9,0,0,0},
            {0,0,0,2,6,0,1,0,0},
            {0,0,1,0,0,2,0,0,3},
            {9,0,0,0,0,0,0,0,4},
            {3,0,0,1,0,0,2,0,0},
            {0,0,5,0,4,6,0,0,0},
            {0,0,0,9,0,0,0,7,6},
            {0,6,0,0,0,0,5,0,1}};
        
        
        int Easy9Known[9][9] =
        
           {{2,1,9,3,7,4,6,8,5},
            {4,8,6,5,1,9,7,3,2},
            {5,3,7,2,6,8,1,4,9},
            {6,7,1,4,8,2,9,5,3},
            {9,5,2,6,3,7,8,1,4},
            {3,4,8,1,9,5,2,6,7},
            {1,9,5,7,4,6,3,2,8},
            {8,2,3,9,5,1,4,7,6},
            {7,6,4,8,2,3,5,9,1}};

        
        
        
        
        //10th easy game
        
        int Easy10Unknown[9][9] =
        
           {{3,1,2,0,0,5,4,0,6},
            {0,0,8,0,0,1,3,0,0},
            {0,0,6,0,0,0,5,0,7},
            {0,0,0,0,4,6,0,0,0},
            {0,0,1,0,0,0,6,0,0},
            {0,0,0,3,8,0,0,0,0},
            {2,0,4,0,0,0,1,0,0},
            {0,0,7,5,0,0,8,0,0},
            {5,0,3,7,0,0,2,6,4}};
        
        
        int Easy10Known[9][9] =
        
        {{3,1,2,9,7,5,4,8,6},
            {7,5,8,4,6,1,3,2,9},
            {9,4,6,8,3,2,5,1,7},
            {8,3,9,1,4,6,7,5,2},
            {4,7,1,2,5,9,6,3,8},
            {6,2,5,3,8,7,9,4,1},
            {2,8,4,6,9,3,1,7,5},
            {1,6,7,5,2,4,8,9,3},
            {5,9,3,7,1,8,2,6,4}};
        
        ///---------------------------Games set------------------------////
        
        
        
        
        for(int x=0; x< 9; x++){
            
            for(int y=0; y< 9; y++){
                
                
                if(randomGame ==1){
                    
                    
                    grid[x][y] = Easy2Unknown[x][y];
                    knowngrid[x][y] = Easy2Known[x][y];
                    
                    
                }
                
                
                
                if (randomGame== 2) {
                    grid[x][y] = Easy1Unknown[x][y];
                    knowngrid[x][y] = Easy1Known[x][y];
                }
                
                
                
                if(randomGame==3 ){
                    
                    
                    grid[x][y] = Easy3Unknown[x][y];
                    knowngrid[x][y] = Easy3Known[x][y];
                    
                    
                }
                
                if(randomGame==4){
                    
                    grid[x][y] = Easy4Unknown[x][y];
                    knowngrid[x][y] = Easy4Known[x][y];
                    
                    
                }
                
                
                if(randomGame==5){
                    
                    grid[x][y] = Easy5Unknown[x][y];
                    knowngrid[x][y] = Easy5Known[x][y];
                    
                    
                    
                }
                
                
                if(randomGame ==6){
                    
                    grid[x][y] = Easy6Unknown[x][y];
                    knowngrid[x][y] = Easy6Known[x][y];
                    
                    
                    
                }
                
                
                if(randomGame==7){
                    
                    grid[x][y] = Easy7Unknown[x][y];
                    knowngrid[x][y] = Easy7Known[x][y];
                    
                    
                }
                
                
                if(randomGame ==8){
                    
                    grid[x][y] = Easy8Unknown[x][y];
                    knowngrid[x][y] = Easy8Known[x][y];
                    
                    
                }
                
                if(randomGame==9){
                    
                    grid[x][y] = Easy9Unknown[x][y];
                    knowngrid[x][y] = Easy9Known[x][y];
                    
                    
                }
                
                
                
                if(randomGame==10){
                    grid[x][y] = Easy10Unknown[x][y];
                    knowngrid[x][y] = Easy10Known[x][y];
                    
                    
                }
                
                
                
            }
            
        }
        
        errors =0;
        Score =100;
          cout <<"You have chosen:                Ḙ    Ǟ   Ṧ   Ÿ\n\n";
        
       
         cout << "Check SudukoGameResults.txt on your Computer for results\n";
        
        
         printSudokuOnFile();
        
        printGrid();
        
        
        if (Score > 0) {
            cout << Ended;
        }
        
        
        printSudokuOnFile();
        
        ScoreSelection();
        errors = 0;
        
        Score = 100;
   
        
    }
    

    
    
    
    
    
    
    //medium game
    
    void Sudoku::MediumGame(){
        
        //first game
        int Medium1Unknown[9][9] =
        
        
            {{0,0,0,0,0,0,0,0,0},
            {0,2,6,9,5,0,0,0,8},
            {9,8,0,0,6,4,0,5,3},
            {0,0,0,0,0,0,8,6,2},
            {0,0,0,4,0,1,0,0,0},
            {2,3,9,0,0,0,0,0,0},
            {0,4,0,6,1,0,0,2,5},
            {7,0,0,0,3,2,9,4,0},
            {0,0,0,0,0,0,0,0,0}};
        
        
        int Medium1Known[9][9] =

        {{3,5,1,2,7,8,6,9,4},
            {4,2,6,9,5,3,1,7,8},
            {9,8,7,1,6,4,2,5,3},
            {5,1,4,3,9,7,8,6,2},
            {6,7,8,4,2,1,5,3,9},
            {2,3,9,5,8,6,4,1,7},
            {8,4,3,6,1,9,7,2,5},
            {7,6,5,8,3,2,9,4,1},
            {1,9,2,7,4,5,3,8,6}};
        
        
        //2nd mediumgame
        
        
        
        int Medium2Unknown[9][9] =
        
        
        {{6,0,0,0,9,1,0,5,0},
            {0,1,0,0,0,0,0,0,0},
            {0,0,9,0,0,8,0,7,0},
            {0,7,3,6,0,0,8,0,0},
            {0,0,4,0,0,0,6,0,0},
            {0,0,6,0,0,2,3,1,0},
            {0,3,0,9,0,0,1,0,0},
            {0,0,0,0,0,0,0,4,0},
            {0,2,0,8,5,0,0,0,3}};
        
        
        int Medium2Known[9][9] =
        
        {{6,4,7,3,9,1,2,5,8},
            {8,1,2,5,4,7,9,3,6},
            {3,5,9,2,6,8,4,7,1},
            {2,7,3,6,1,5,8,9,4},
            {1,8,4,7,3,9,6,2,5},
            {5,9,6,4,8,2,3,1,7},
            {4,3,5,9,7,6,1,8,2},
            {7,6,8,1,2,3,5,4,9},
            {9,2,1,8,5,4,7,6,3}};
        
        
        
        
        
        //game3
                
        
        
        
        int Medium3Unknown[9][9] =
        
        
          { {0,0,0,0,0,0,3,2,0},
            {0,5,2,0,9,1,8,0,0},
            {0,0,0,0,0,2,0,0,0},
            {6,0,0,0,0,4,7,0,3},
            {0,0,9,0,0,0,5,0,0},
            {5,0,1,7,0,0,0,0,9},
            {0,0,0,4,0,0,0,0,0},
            {0,0,7,5,2,0,6,8,0},
            {0,6,3,0,0,0,0,0,0}};
        
        
        int Medium3Known[9][9] =
        
           {{9,1,4,8,7,5,3,2,6},
            {3,5,2,6,9,1,8,7,4},
            {8,7,6,3,4,2,1,9,5},
            {6,2,8,9,5,4,7,1,3},
            {7,3,9,2,1,6,5,4,8},
            {5,4,1,7,3,8,2,6,9},
            {1,8,5,4,6,7,9,3,2},
            {4,9,7,5,2,3,6,8,1},
            {2,6,3,1,8,9,4,5,7}};
        
        
        
        //game four
        int Medium4Unknown[9][9] =
        
        
           {{0,0,4,0,0,0,0,1,0},
            {9,6,0,0,4,0,0,7,0},
            {0,7,0,0,0,5,4,6,0},
            {0,0,9,0,0,3,2,0,0},
            {0,3,0,0,9,0,0,4,0},
            {0,0,6,4,0,0,9,0,0},
            {0,9,2,8,0,0,0,3,0},
            {0,5,0,0,3,0,0,9,7},
            {0,4,0,0,0,0,6,0,0}};
        
        
        int Medium4Known[9][9] =
        
        
        {{5,2,4,7,8,6,3,1,9},
            {9,6,1,3,4,2,8,7,5},
            {8,7,3,9,1,5,4,6,2},
            {4,1,9,5,7,3,2,8,6},
            {2,3,5,6,9,8,7,4,1},
            {7,8,6,4,2,1,9,5,3},
            {1,9,2,8,6,7,5,3,4},
            {6,5,8,2,3,4,1,9,7},
            {3,4,7,1,5,9,6,2,8}};
        
        
        
        
        //game 5
        
        
        
        
        int Medium5Unknown[9][9] =
        
        
            {{0,3,0,0,0,1,0,0,7},
            {7,0,0,0,0,0,0,0,0},
            {0,0,1,7,0,9,4,0,0},
            {2,4,0,0,0,7,0,0,0},
            {0,0,0,6,0,2,0,0,0},
            {0,0,0,8,0,0,0,9,4},
            {0,0,7,2,0,5,9,0,0},
            {0,1,0,0,0,0,0,0,3},
            {6,0,0,9,0,0,0,7,0}};
        
        
        int Medium5Known[9][9] =
        
        {{4,3,9,5,2,1,6,8,7},
            {7,6,2,3,8,4,1,5,9},
            {8,5,1,7,6,9,4,3,2},
            {2,4,8,1,9,7,3,6,5},
            {5,9,3,6,4,2,7,1,8},
            {1,7,6,8,5,3,2,9,4},
            {3,8,7,2,1,5,9,4,6},
            {9,1,5,4,7,6,8,2,3},
            {6,2,4,9,3,8,5,7,1}};

        //6th game
        
        
        
        
        int Medium6Unknown[9][9] =
        
        
        {{0,0,8,0,2,0,0,0,7},
            {9,0,0,8,0,6,0,0,0},
            {0,3,0,0,1,0,0,2,0},
            {0,0,1,0,0,4,0,0,9},
            {0,9,0,0,0,0,0,3,0},
            {7,0,0,5,0,0,1,0,0},
            {0,5,0,0,9,0,0,4,0},
            {0,0,0,2,0,3,0,0,1},
            {1,0,0,0,7,0,9,0,0}};
        
        
        int Medium6Known[9][9] =
        
        {{6,1,8,3,2,5,4,9,7},
            {9,7,2,8,4,6,3,1,5},
            {5,3,4,9,1,7,8,2,6},
            {2,6,1,7,3,4,5,8,9},
            {8,9,5,1,6,2,7,3,4},
            {7,4,3,5,8,9,1,6,2},
            {3,5,7,6,9,1,2,4,8},
            {4,8,9,2,5,3,6,7,1},
            {1,2,6,4,7,8,9,5,3}};
        
        
        

        
        //7th game
        
        
        
      
        
        int Medium7Unknown[9][9] =
        
        
        {{0,0,9,6,0,5,0,3,8},
            {0,0,0,0,0,9,0,4,5},
            {0,0,0,0,0,0,6,0,2},
            {0,9,0,0,1,0,3,7,0},
            {0,0,0,7,0,4,0,0,0},
            {0,1,6,0,8,0,0,5,0},
            {9,0,1,0,0,0,0,0,0},
            {0,6,0,3,0,0,0,0,0},
            {4,3,0,2,0,7,9,0,0}};
        
        
        int Medium7Known[9][9] =
        
        {{2,4,9,7,5,1,3,8},
            {6,8,3,1,2,9,7,4,5},
            {1,5,7,4,3,8,6,9,2},
            {8,9,4,5,1,2,3,7,6},
            {3,2,5,7,6,4,8,1,9},
            {7,1,6,9,8,3,2,5,4},
            {9,7,1,8,4,6,5,2,3},
            {5,6,2,3,9,1,4,8,7},
            {4,3,8,2,5,7,9,6,1}};
        
        
        
        
        
       //8th game
        
        
        int Medium8Unknown[9][9] =
        
        
          {{0,2,0,0,0,6,0,0,3},
            {0,0,0,0,2,0,7,4,0},
            {0,0,0,0,1,0,0,0,9},
            {0,8,0,6,0,0,9,0,0},
            {5,0,1,0,0,0,3,0,2},
            {0,0,3,0,0,1,0,8,0},
            {8,0,0,0,3,0,0,0,0},
            {0,6,0,3,0,0,0,0,0},
            {4,0,0,8,0,0,0,1,0}};
        
        
        int Medium8Known[9][9] =
        
           {{7,2,8,4,9,6,1,5,3},
            {1,5,9,3,2,8,7,4,6},
            {3,4,6,7,1,5,8,2,9},
            {2,8,4,6,5,3,9,7,1},
            {5,7,1,9,8,4,3,6,2},
            {9,6,3,2,7,1,4,8,5},
            {8,1,7,5,3,2,6,9,4},
            {6,9,5,1,4,7,2,3,8},
            {4,3,2,8,6,9,5,1,7}};

        
        
        
        //9th game
        
        
        
        
        
        int Medium9Unknown[9][9] =
        
        
           {{7,0,0,1,8,0,0,9,0},
            {0,0,1,0,0,0,2,0,0},
            {5,0,0,0,0,4,3,0,0},
            {0,0,0,4,0,0,0,0,3},
            {3,0,4,8,0,5,7,0,2},
            {1,0,0,0,0,2,0,0,0},
            {0,0,2,5,0,0,0,0,8},
            {0,0,3,0,0,0,6,0,0},
            {0,1,0,0,9,8,0,0,5}};
        
        
        int Medium9Known[9][9] =
        
           {{7,2,6,1,8,3,5,9,4},
            {4,3,1,6,5,9,2,8,7},
            {5,8,9,7,2,4,3,6,1},
            {2,6,8,4,1,7,9,5,3},
            {3,9,4,8,6,5,7,1,2},
            {1,7,5,9,3,2,8,4,6},
            {9,4,2,5,7,6,1,3,8},
            {8,5,3,2,4,1,6,7,9},
            {6,1,7,3,9,8,4,2,5}};
        
        
        
    //10th game
        
        
        
        
        
        
        
        
        int Medium10Unknown[9][9] =
        
        
           {{0,7,0,6,0,0,0,1,0},
            {5,0,0,0,0,2,0,3,0},
            {6,0,2,0,0,0,0,0,0},
            {4,2,0,7,0,0,0,0,1},
            {0,0,8,0,6,0,4,0,0},
            {1,0,0,0,0,9,0,2,8},
            {0,0,0,0,0,0,3,0,9},
            {0,9,0,4,0,0,0,0,6},
            {0,4,0,0,0,3,0,8,0}};
        
        
        int Medium10Known[9][9] =
        
        {{8,7,9,6,3,4,2,1,5},
            {5,1,4,8,9,2,6,3,7},
            {6,3,2,5,1,7,8,9,4},
            {4,2,3,7,8,5,9,6,1},
            {9,5,8,2,6,1,4,7,3},
            {1,6,7,3,4,9,5,2,8},
            {2,8,5,1,7,6,3,4,9},
            {3,9,1,4,2,8,7,5,6},
            {7,4,6,9,5,3,1,8,2}};

        
        
        
        
        ///---------------------------Games set------------------------////
        
        
        
        
        for(int x=0; x< 9; x++){
            
            for(int y=0; y< 9; y++){
                
                
                if(randomGame ==1){
                    
                    
                    grid[x][y] = Medium2Unknown[x][y];
                    knowngrid[x][y] = Medium2Known[x][y];
                    
                    
                }
                
                
                
                if (randomGame == 2) {
                    grid[x][y] = Medium1Unknown[x][y];
                    knowngrid[x][y] = Medium1Known[x][y];
                }
                
                
                
                if(randomGame==3 ){
                    
                    
                    grid[x][y] = Medium3Unknown[x][y];
                    knowngrid[x][y] = Medium3Known[x][y];
                    
                    
                }
                
                if(randomGame ==4){
                    
                    grid[x][y] = Medium4Unknown[x][y];
                    knowngrid[x][y] = Medium4Known[x][y];
                    
                    
                }
                
                
                if(randomGame==5){
                    
                    grid[x][y] = Medium5Unknown[x][y];
                    knowngrid[x][y] = Medium5Known[x][y];
                    
                    
                    
                }
                
                
                if(randomGame ==6){
                    
                    grid[x][y] = Medium6Unknown[x][y];
                    knowngrid[x][y] = Medium6Known[x][y];
                    
                    
                    
                }
                
                
                if(randomGame==7){
                    
                    grid[x][y] = Medium7Unknown[x][y];
                    knowngrid[x][y] = Medium7Known[x][y];
                    
                    
                }
                
                
                if(randomGame ==8){
                    
                    grid[x][y] = Medium8Unknown[x][y];
                    knowngrid[x][y] = Medium8Known[x][y];
                    
                    
                }
                
                if(randomGame==9){
                    
                    grid[x][y] = Medium9Unknown[x][y];
                    knowngrid[x][y] = Medium9Known[x][y];
                    
                    
                }
                
                
                
                if(randomGame==10){
                    grid[x][y] = Medium10Unknown[x][y];
                    knowngrid[x][y] = Medium10Known[x][y];
                    
                    
                }
                
                
                
            }
            
        }
        
        errors = 0;
        Score = 100;
        
         cout <<"You have chosen:                  Ṃ  Ė  Ḋ  Í  Ů  Ɱ  \n\n";
        
        
        
        
        cout << "check SudukoGameResults.txt on your Computer for results\n";

         printSudokuOnFile();
        
        printGrid();
    
        
        if (Score > 0) {
            cout << Ended;
        }
        
        
        printSudokuOnFile();
        
        ScoreSelection();
        
         errors = 0;
        Score = 100;

                
    }
    
    


    
    
    
    void Sudoku::HardGame(){
        
        //first game
        int Hard1Unknown[9][9] =
        
        
        {{0,0,0,0,0,0,6,0,0},
            {0,0,6,2,0,3,5,7,0},
            {0,5,7,0,0,0,0,0,3},
            {6,0,2,0,5,0,0,0,1},
            {0,4,0,0,7,0,0,5,0},
            {5,0,0,0,3,0,7,0,9},
            {7,0,0,0,0,0,1,9,0},
            {0,6,5,1,0,4,8,0,0},
            {0,0,3,0,0,0,0,0,0}};
        
        
        int Hard1Known[9][9] =
        
        {{4,3,1,5,9,7,6,8,2},
            {8,9,6,2,1,3,5,7,4},
            {2,5,7,8,4,6,9,1,3},
            {6,7,2,9,5,8,3,4,1},
            {3,4,9,6,7,1,2,5,8},
            {5,1,8,4,3,2,7,6,9},
            {7,2,4,3,8,5,1,9,6},
            {9,6,5,1,2,4,8,3,7},
            {1,8,3,7,6,9,4,2,5}};
        
        
        //2nd hardgame
        
        
        int Hard2Unknown[9][9] =
        
        
        {{0,7,5,0,0,9,0,0,4},
            {0,0,0,5,7,0,6,1,0},
            {0,0,0,0,0,0,0,0,0},
            {0,0,0,1,0,2,0,0,0},
            {4,0,6,0,0,0,5,0,3},
            {0,0,0,6,0,3,0,0,0},
            {0,0,0,0,0,0,0,0,0},
            {0,4,9,0,3,6,0,0,0},
            {2,0,0,8,0,0,9,7,0}};
        
        
        int Hard2Known[9][9] =
        
        {{1,7,5,3,6,9,2,8,4},
            {3,2,4,5,7,8,6,1,9},
            {6,9,8,4,2,1,7,3,5},
            {9,3,7,1,5,2,4,6,8},
            {4,1,6,9,8,7,5,2,3},
            {5,8,2,6,4,3,1,9,7},
            {8,6,1,7,9,5,3,4,2},
            {7,4,9,2,3,6,8,5,1},
            {2,5,3,8,1,4,9,7,6}};
        
        
        
        
        ////////////////////////////
        
        
        int Hard3Unknown[9][9] =
        
        
           {{0,8,0,7,0,5,0,1,0},
            {0,4,0,0,8,0,0,0,0},
            {9,0,7,3,0,0,0,0,0},
            {6,0,9,0,0,0,0,0,0},
            {7,0,1,8,0,9,2,0,6},
            {0,0,0,0,0,0,3,0,5},
            {0,0,0,0,0,7,5,0,4},
            {0,0,0,0,1,0,0,6,0},
            {0,9,0,2,0,3,0,7,0}};
        
        
        int Hard3Known[9][9] =
        
        {{2,8,3,7,6,5,4,1,9},
            {1,4,5,9,8,2,6,3,7},
            {9,6,7,3,4,1,8,5,2},
            {6,3,9,5,2,4,7,8,1},
            {7,5,1,8,3,9,2,4,6},
            {8,2,4,1,7,6,3,9,5},
            {3,1,8,6,9,7,5,2,4},
            {5,7,2,4,1,8,9,6,3},
            {4,9,6,2,5,3,1,7,8}};
        
        
        
        ////////////////////////////
        
        int Hard4Unknown[9][9] =
        
        
           {{0,0,2,0,0,0,1,0,9},
            {0,3,9,6,0,4,5,0,0},
            {0,0,0,0,0,0,0,0,0},
            {0,0,7,0,2,6,0,0,1},
            {0,1,0,3,0,8,0,5,0},
            {6,0,0,4,7,0,8,0,0},
            {0,0,0,0,0,0,0,0,0},
            {0,0,1,9,0,3,6,8,0},
            {4,0,6,0,0,0,9,0,0}};
        
        
        int Hard4Known[9][9] =
        
           {{8,4,2,7,3,5,1,6,9},
            {7,3,9,6,1,4,5,2,8},
            {1,6,5,2,8,9,3,7,4},
            {9,8,7,5,2,6,4,3,1},
            {2,1,4,3,9,8,7,5,6},
            {6,5,3,4,7,1,8,9,2},
            {3,9,8,1,6,7,2,4,5},
            {5,2,1,9,4,3,6,8,7},
            {4,7,6,8,5,2,9,1,3}};

        ////////////////////////////
        
        
        int Hard5Unknown[9][9] =
        
        
           {{9,0,0,0,0,6,1,0,0},
            {0,0,0,0,1,0,4,0,0},
            {6,0,0,7,0,8,0,0,0},
            {2,0,0,8,0,0,7,5,0},
            {4,0,0,0,0,0,0,0,2},
            {0,7,5,0,0,9,0,0,4},
            {0,0,0,1,0,4,0,0,8},
            {0,0,2,0,3,0,0,0,0},
            {0,0,6,5,0,0,0,0,3}};
        
        
        int Hard5Known[9][9] =
        
        {{9,2,3,4,5,6,1,8,7},
            {7,5,8,2,1,3,4,6,9},
            {6,1,4,7,9,8,2,3,5},
            {2,3,9,8,4,1,7,5,6},
            {4,6,1,3,7,5,8,9,2},
            {8,7,5,6,2,9,3,1,4},
            {3,9,7,1,6,4,5,2,8},
            {5,8,2,9,3,7,6,4,1},
            {1,4,6,5,8,2,9,7,3}};
        
        ////////////////////////////
        
        
        int Hard6Unknown[9][9] =
        
        
           {{0,0,0,8,0,2,0,0,3},
            {0,2,0,0,0,0,0,5,0},
            {0,0,0,0,0,3,0,1,2},
            {0,0,0,0,8,6,9,0,4},
            {0,0,0,0,0,0,0,0,0},
            {1,0,4,3,5,0,0,0,0},
            {2,5,0,4,0,0,0,0,0},
            {0,7,0,0,0,0,0,8,0},
            {4,0,0,6,0,8,0,0,0}};
        
        
        int Hard6Known[9][9] =
        
           {{9,6,5,8,1,2,7,4,3},
            {3,2,1,7,6,4,8,5,9},
            {8,4,7,5,9,3,6,1,2},
            {5,3,2,1,8,6,9,7,4},
            {7,8,6,2,4,9,1,3,5},
            {1,9,4,3,5,7,2,6,8},
            {2,5,8,4,7,1,3,9,6},
            {6,7,3,9,2,5,4,8,1},
            {4,1,9,6,3,8,5,2,7}};
        
        ////////////////////////////
        
        
        int Hard7Unknown[9][9] =
        
        
           {{0,2,0,0,5,0,0,0,6},
            {0,0,0,0,0,0,9,5,0},
            {0,5,0,0,8,1,0,0,0},
            {6,1,0,0,0,8,2,0,0},
            {3,0,0,0,0,0,0,0,5},
            {0,0,8,5,0,0,0,3,1},
            {0,0,0,9,6,0,0,4,0},
            {0,4,7,0,0,0,0,0,0},
            {8,0,0,0,1,0,0,7,0}};
        
        
        int Hard7Known[9][9] =
        
    

        
        
           {{7,2,4,3,5,9,8,1,6},
            {1,8,6,2,7,4,9,5,3},
            {9,5,3,6,8,1,4,2,7},
            {6,1,5,7,3,8,2,9,4},
            {3,9,2,1,4,6,7,8,5},
            {4,7,8,5,9,2,6,3,1},
            {2,3,1,9,6,7,5,4,8},
            {5,4,7,8,2,3,1,6,9},
            {8,6,9,4,1,5,3,7,2}};
        
         ////////////////////////////
        
        
        int Hard8Unknown[9][9] =
        
        
           {{0,3,2,0,0,9,0,0,0},
            {6,0,8,5,4,0,0,9,0},
            {4,0,0,0,0,0,0,0,0},
            {0,0,6,0,0,4,0,8,0},
            {2,0,0,0,8,0,0,0,7},
            {0,8,0,6,0,0,3,0,0},
            {0,0,0,0,0,0,0,0,5},
            {0,1,0,0,2,7,8,0,3},
            {0,0,0,9,0,0,4,7,0}};
        
        
        int Hard8Known[9][9] =
        
        
     
        
        
        
            {{5,3,2,1,6,9,7,4,8},
            {6,7,8,5,4,3,1,9,2},
            {4,9,1,2,7,8,5,3,6},
            {3,5,6,7,1,4,2,8,9},
            {2,4,9,3,8,5,6,1,7},
            {1,8,7,6,9,2,3,5,4},
            {7,6,4,8,3,1,9,2,5},
            {9,1,5,4,2,7,8,6,3},
            {8,2,3,9,5,6,4,7,1}};
        


        
        
         ////////////////////////////
        
        
        
        
        int Hard9Unknown[9][9] =
        
        
        {{5,2,0,0,0,4,1,9,0},
            {0,0,0,0,8,0,0,4,7},
            {0,0,0,2,0,0,0,0,0},
            {3,0,0,0,0,9,6,0,0},
            {6,8,0,0,0,0,0,2,4},
            {0,0,1,8,0,0,0,0,9},
            {0,0,0,0,0,3,0,0,0},
            {7,6,0,0,1,0,0,0,0},
            {0,3,4,7,0,0,0,1,2}};
        
        
        int Hard9Known[9][9] =
        
        
       
        
        
        
        {{5,2,8,6,7,4,1,9,3},
            {1,9,6,3,8,5,2,4,7},
            {4,7,3,2,9,1,8,6,5},
            {3,5,7,4,2,9,6,8,1},
            {6,8,9,1,5,7,3,2,4},
            {2,4,1,8,3,6,7,5,9},
            {8,1,2,5,4,3,9,7,6},
            {7,6,5,9,1,2,4,3,8},
            {9,3,4,7,6,8,5,1,2}};
        
        
        
        
        
        int Hard10Unknown[9][9] =
        
        
           {{7,1,0,9,0,6,0,3,0},
            {0,3,0,0,0,0,0,0,0},
            {8,0,9,7,0,0,0,6,0},
            {0,0,5,0,1,0,0,2,0},
            {2,0,7,0,0,0,1,0,3},
            {0,9,0,0,6,0,8,0,0},
            {0,7,0,0,0,8,3,0,2},
            {0,0,0,0,0,0,0,9,0},
            {0,2,0,1,0,9,0,7,8}};
        
        
        int Hard10Known[9][9] =
        
                
        
        {{7,1,2,9,8,6,4,3,5},
            {5,3,6,4,2,1,7,8,9},
            {8,4,9,7,3,5,2,6,1},
            {4,8,5,3,1,7,9,2,6},
            {2,6,7,8,9,4,1,5,3},
            {3,9,1,5,6,2,8,4,7},
            {9,7,4,6,5,8,3,1,2},
            {2,5,8,2,7,3,6,9,4},
            {6,2,3,1,4,9,5,7,8}};
        

        
        
        
        
        
        
        
        
        
        
        
        
        
        ///---------------------------Games set------------------------////
        
        
        
        
        for(int x=0; x< 9; x++){
            
            for(int y=0; y< 9; y++){
                
                
                if(randomGame ==1){
                    
                    
                    grid[x][y] = Hard2Unknown[x][y];
                    knowngrid[x][y] = Hard2Known[x][y];
                    
                    
                }
                
                
                
                if (randomGame== 2) {
                    grid[x][y] = Hard1Unknown[x][y];
                    knowngrid[x][y] = Hard1Known[x][y];
                }
                
                
                
                if(randomGame==3 ){
                    
                    
                    grid[x][y] = Hard3Unknown[x][y];
                    knowngrid[x][y] = Hard3Known[x][y];
                    
                    
                }
                
                if(randomGame ==4){
                    
                    grid[x][y] = Hard4Unknown[x][y];
                    knowngrid[x][y] = Hard4Known[x][y];
                    
                    
                }
                
                
                if(randomGame==5){
                    
                    grid[x][y] = Hard5Unknown[x][y];
                    knowngrid[x][y] = Hard5Known[x][y];
                    
                    
                    
                }
                
                
                if(randomGame==6){
                    
                    grid[x][y] = Hard6Unknown[x][y];
                    knowngrid[x][y] = Hard6Known[x][y];
                    
                    
                    
                }
                
                
                if(randomGame ==7){
                    
                    grid[x][y] = Hard7Unknown[x][y];
                    knowngrid[x][y] = Hard7Known[x][y];
                    
                    
                }
                
                
                if(randomGame==8){
                    
                    grid[x][y] = Hard8Unknown[x][y];
                    knowngrid[x][y] = Hard8Known[x][y];
                    
                    
                }
                
                if(randomGame==9){
                    
                    grid[x][y] = Hard9Unknown[x][y];
                    knowngrid[x][y] = Hard9Known[x][y];
                    
                    
                }
                
                
                
                if(randomGame==10){
                    grid[x][y] = Hard10Unknown[x][y];
                    knowngrid[x][y] = Hard10Known[x][y];
                    
                    
                }
                
                
                
            }
            
        }
        Score = 100;
        errors =0;
        
        cout <<"You have chosen:                    Ⱨ   Ⱥ   Ȑ  Ð\n\n";
        
        
                
        cout << "check SudukoGameResults.txt on your Computer for results\n\n";

    
        
        printSudokuOnFile();
        
        printGrid();
        
        if (Score > 0) {
            cout << Ended;
        }
        
        
        printSudokuOnFile();
        
        ScoreSelection();
        
         errors = 0;
        Score = 100;

        
        
    }
    
    // hard game
    
    
    
    
    
    
    
    
    
    
    void Sudoku::ScoreSelection(){
        
        
        
        
        if (Score == 100){
            cout << "Score was: " << Score << "\n\n Grade: A\n\n";
            
            cout << "Excellent Player, should try next level\n";
            
        }
        
        //second range of scores
        if (Score >= 80 && Score < 100){
            cout << "Score was: " << Score << "\n\n Grade: B\n\n";
            cout << "Good player, keep practicing on this level\n";
            
            
            
        }
        
        
        if (Score >= 60 && Score < 80){
            cout << "Score was: " << Score << "\n\n Grade: C\n\n";
            cout << "OK player… keep practicing on this level if you dare\n";
            
            
        }
        if (Score >= 80 && Score < 100){
            cout << "Score was: " << Score << "\n\n Grade: D\n\n";
            cout << "Well.. suggest trying a easier level’\n";
            
            
        }
        
        if (Score < 40) {
            cout << "Score was: " << Score << "\n\n Grade: F\n\n";
            cout << "Look at some of the Strategies I have on the Menue\n";
            
        }
        
    }
    


    
 



    
    
    
    //setting the value of grid
    void Sudoku::setGrid(char b[9][9], int leftNum[10][10], int Known[9][9], string c[9][9]){
        
        box[8][8] = b[8][8];
        LeftNumber[9][9] = leftNum[9][9];
        column[8][8] = c[8][8];
        knowngrid[8][8] =  Known[8][8];
    }
    
    //setting easy game
    
    
    
    
    
    
    
    
    
    
    
    
    //printing results of suduko of on a text file
    
    void Sudoku::printSudokuOnFile(){
        
        ofstream myFile("SudukoGameResults.txt");
        
        if(myFile.is_open()){
            //enter in text
            
            myFile << "Player: " << name;
            myFile << "\n\nYour Score was: " << Score;
            
            myFile << "\n\nHelping Videos: https://www.youtube.com/watch?v=rwJG0wj-80w\n\n";
            
            
            myFile << "Your Sudoku: \n\n";
            
            {//start of the board
                
                
                myFile << " \n\n                   ☟ Ĉ Ỏ Ł Ǚ Ɱ Ɲ ☟\n\n";
                
                myFile<< "☟Ɽ☟ +-------------------------------------------------------------+\n";
                myFile<< "☟Ộ☟ |  ①     ②     ③      ④     ⑤     ⑥     ⑦      ⑧     ⑨  |\n";
                myFile<< "☟W☟ |_____||_____||_____||_____||_____||_____||_____||_____||_____|\n";
                
                
                
                
                for(int x=0; x< 9; x++){
                    //cout << LeftNumber[x][0] << "->\n";
                    
                    myFile << setw(2);
                    myFile <<"    |_____||_____||_____||_____||_____||_____||_____||_____||_____|\n";
                    
                    
                    myFile<< LeftNumber[x][0] << " ☞ ";
                    
                    for(int y=0; y< 9; y++){
                        
                        
                        myFile << lines[0][x] << "  " << grid[x][y]<< "  " << lines[0][x];
                        
                        
                        
                        
                        
                        
                    }
                    //cout << lines[x][0];
                    
                    
                    myFile << "\n";
                    
                }
                myFile <<"    |_____||_____||_____||_____||_____||_____||_____||_____||_____|\n\n";
                
                
                
                
                
                
                
            }
            
            
            
            myFile << "Filled Grid: \n\n";
            
            
            
            
            {//start of the board
                
                
                myFile << " \n\n                    ☟ Ĉ Ỏ Ł Ǚ Ɱ Ɲ ☟\n\n";
                
                myFile<< "☟Ɽ☟ +-------------------------------------------------------------+\n";
                myFile<< "☟Ộ☟ |  ①     ②     ③      ④     ⑤     ⑥     ⑦      ⑧     ⑨  |\n";
                myFile<< "☟W☟ |_____||_____||_____||_____||_____||_____||_____||_____||_____|\n";
                
                
                
                
                for(int x=0; x< 9; x++){
                    //cout << LeftNumber[x][0] << "->\n";
                    
                    myFile << setw(2);
                    myFile <<"    |_____||_____||_____||_____||_____||_____||_____||_____||_____|\n";
                    
                    
                    myFile<< LeftNumber[x][0] << " ☞ ";
                    
                    for(int y=0; y< 9; y++){
                        
                        
                        myFile << lines[0][x] << "  " << knowngrid[x][y]<< "  " << lines[0][x];
                        
                        
                        
                        
                        
                        
                    }
                    //cout << lines[x][0];
                    
                    
                    myFile << "\n";
                    
                }
                myFile <<"    |_____||_____||_____||_____||_____||_____||_____||_____||_____|\n\n";
                
                
             
                
                
            }

            
            
            myFile.close();
            //close file after
           
        }
        
    }
    
    
    
    
    bool Sudoku::checkEmptry(){
        if(grid[row-1][col-1] == 0 ) {
            return true;
        }
        else{
            Score = Score - 5;
            errors = errors +1;
            cout << "\n\n-5 points!!! TRY a number a spot that isnt Filled! Try Again!\n";
            
            printGrid();
            
            return false;
        }
    }
    
    bool Sudoku::checkRightNum(){
        
        if(knowngrid[row-1][col-1] == num) {
            
            grid[row-1][col-1]=num;
            
            return true;
        }
        else{
            cout << " \n\n-5 points!!! Guessed the wrong NUMBER! Try Again!\n";
            Score = Score -5;
            errors = errors +1;
            printGrid();
            return false;
            
        }
        
    }
    

    
    
    bool Sudoku::Over10(){
        if (row > 14) {
            cout << "\nEnter a Row 1-9!!!\n";
            Score = Score -5;
            errors = errors +1;
            printGrid();
            return false;
            
        }
        if (col > 14) {
            cout << "\nEnter a Column 1-9!!!!\n";
            errors = errors +1;
            Score = Score -5;
            printGrid();
            return false;
            
            
        }
        
        if (num > 10) {
            cout << "\nEnter a Number 1-9!!!!\n";
            errors = errors +1;
            Score = Score -5;
            printGrid();
            return false;
            
            
        }
        
        
        
        else {
            
            return true;}
    }
    
    
    
    
    
    bool Sudoku::FinishGame(){
        for(int x=0; x< 9; x++){
            
            for(int y=0; y< 9; y++){
                if (grid[x][y] == 0) {
                    return true;
                }
               
                
                }
            }
        printGrid();
    
    return false;
    }
    
    
    
    
    
    

    
    
